#!/bin/bash

# goss-prove

# Utility to run goss files as TAP test plans under prove(1)

# e.g. goss-prove /etc/goss/

set -eu -o pipefail

while getopts ":lvx" opt; do
  case $opt in
    l)
      list_plans=1
      ;;
    x) [[ ${-//[!v]/} ]] && set -x; set -v
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      ;;
  esac
done
shift $((OPTIND-1))

cd /etc/goss

: ${list_plans:=0}

function list_plans {
  local filter="${1-}"
  find "$PWD" -type f \
    \( -ipath "*$filter*.yaml" -o \
       -ipath "*$filter*.yml"  -o \
       -ipath "*$filter*.json"    \
    \) -printf "%T+ %p\n"
}

if (( list_plans != 0 )); then
  echo 'Available roles: '
  list_plans "${1-}" | awk '{print "  * "$1" "$2}'
  exit 0
fi

(( $# == 0 )) && set -- '*'

plans=()
for filter; do
  filter_plans_found=0

  while read -r file; do
    plans+=( "${file#/etc/goss/}" )
    filter_plans_found=1
  done < <(list_plans "${filter}" | awk '{print $2}')

  if (( $filter_plans_found == 0 )); then
    echo "ERROR: No test plans found matching '$filter'." >&2
    list_plans
    exit 3
  fi
done

prove \
  --color \
  --comments \
  --exec goss-prove-runner \
  --ext yaml \
  --ext yml \
  --failures \
  --jobs 1 \
  --norc \
  --normalize \
  --recurse \
  --timer \
  --trap \
  "${plans[@]}"

